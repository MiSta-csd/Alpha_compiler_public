State 102 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULT expr
   18     | expr DIVIDE expr
   19     | expr PERCENT expr
   20     | expr GREATER expr
   21     | expr GREATEREQUAL expr
   22     | expr LESSER expr
   23     | expr LESSEREQUAL expr
   24     | expr EQUAL expr
   25     | expr NOTEQUAL expr

   26 $@1: %empty

   27 expr: expr AND $@1 M expr

   28 $@2: %empty

   29 expr: expr OR $@2 M expr
   30     | term

   31 M: %empty

   32 term: LPAREN expr RPAREN
   33     | MINUS expr
   34     | NOT expr
   35     | PLUSPLUS lvalue
   36     | lvalue PLUSPLUS
   37     | MINUSMINUS lvalue
   38     | lvalue MINUSMINUS
   39     | primary

   40 assignexpr: lvalue ASSIGN expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LPAREN funcdef RPAREN
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | COLONCOLON ID
   49       | member

   50 tableitem: lvalue DOT ID
   51          | lvalue LBRACK expr RBRACK

   52 member: tableitem
   53       | call DOT ID
   54       | call LBRACK expr RBRACK

   55 call: call normcall
   56     | lvalue callsuffix
   57     | LPAREN funcdef RPAREN LPAREN elist RPAREN
   58     | LPAREN funcdef RPAREN LPAREN RPAREN

   59 callsuffix: normcall
   60           | methodcall

   61 normcall: LPAREN elist RPAREN

   62 methodcall: DOTDOT ID LPAREN elist RPAREN

   63 elist: expr
   64      | elist COMMA expr
   65      | %empty

   66 objectdef: LBRACK elist RBRACK
   67          | LBRACK indexed RBRACK

   68 indexed: indexedelem
   69        | indexed COMMA indexedelem

   70 indexedelem: LCBRACK expr COLON expr RCBRACK

   71 $@3: %empty

   72 block: LCBRACK $@3 stmts RCBRACK

   73 funcname: ID
   74         | %empty

   75 funcprefix: FUNCTION funcname

   76 funcargs: LPAREN idlist RPAREN

   77 funcbody: block

   78 funcdef: funcprefix funcargs funcbody

   79 const: INTEGER
   80      | REAL
   81      | STRING
   82      | NIL
   83      | TRUE
   84      | FALSE

   85 idlist: ID
   86       | idlist COMMA ID
   87       | %empty

   88 ifprefix: IF LPAREN expr RPAREN

   89 elseprefix: ELSE

   90 ifstmt: ifprefix stmt
   91       | ifprefix stmt elseprefix stmt

   92 whilestart: WHILE

   93 whilesecond: LPAREN expr RPAREN

   94 whilestmt: whilestart whilesecond stmt

   95 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

   96 returnstmt: RETURN SEMICOLON
   97           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <intConst> (258) 79
    REAL <realConst> (259) 80
    STRING <strConst> (260) 81
    ID <strConst> (261) 46 47 48 50 53 62 73 85 86
    TRUE <boolean> (262) 83
    FALSE <boolean> (263) 84
    OR (264) 29
    LOCAL (265) 47
    NIL (266) 82
    UMINUS (267)
    MINUSMINUS (268) 37 38
    IF (269) 88
    ELSE (270) 89
    WHILE (271) 92
    FUNCTION (272) 75
    FOR (273) 95
    RETURN (274) 96 97
    BREAK (275) 9
    CONTINUE (276) 10
    AND (277) 27
    NOT (278) 34
    ASSIGN (279) 40
    PLUS (280) 15
    MINUS (281) 16 33
    MULT (282) 17
    DIVIDE (283) 18
    PERCENT (284) 19
    NOTEQUAL (285) 25
    PLUSPLUS (286) 35 36
    GREATER (287) 20
    LESSER (288) 22
    GREATEREQUAL (289) 21
    LESSEREQUAL (290) 23
    EQUAL (291) 24
    LCBRACK (292) 70 72
    RCBRACK (293) 70 72
    LBRACK (294) 51 54 66 67
    RBRACK (295) 51 54 66 67
    LPAREN (296) 32 44 57 58 61 62 76 88 93 95
    RPAREN (297) 32 44 57 58 61 62 76 88 93 95
    SEMICOLON (298) 4 9 10 13 95 96 97
    COMMA (299) 64 69 86
    COLON (300) 70
    COLONCOLON (301) 48
    DOT (302) 50 53
    DOTDOT (303) 62


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    stmts <stmt_pt> (51)
        on left: 2 3
        on right: 1 2 72
    stmt <stmt_pt> (52)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3 90 91 94 95
    expr <expr_p> (53)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 27 29 30
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 27 29 32 33 34 40 51 54 63 64 70 88 93 95 97
    $@1 (54)
        on left: 26
        on right: 27
    $@2 (55)
        on left: 28
        on right: 29
    M <intConst> (56)
        on left: 31
        on right: 27 29
    term <expr_p> (57)
        on left: 32 33 34 35 36 37 38 39
        on right: 30
    assignexpr <expr_p> (58)
        on left: 40
        on right: 14
    primary <expr_p> (59)
        on left: 41 42 43 44 45
        on right: 39
    lvalue <expr_p> (60)
        on left: 46 47 48 49
        on right: 35 36 37 38 40 41 50 51 56
    tableitem <expr_p> (61)
        on left: 50 51
        on right: 52
    member <expr_p> (62)
        on left: 52 53 54
        on right: 49
    call <expr_p> (63)
        on left: 55 56 57 58
        on right: 42 53 54 55
    callsuffix <callVal> (64)
        on left: 59 60
        on right: 56
    normcall <callVal> (65)
        on left: 61
        on right: 55 59
    methodcall <callVal> (66)
        on left: 62
        on right: 60
    elist <exprVec> (67)
        on left: 63 64 65
        on right: 57 61 62 64 66 95
    objectdef <expr_p> (68)
        on left: 66 67
        on right: 43
    indexed <exprVec> (69)
        on left: 68 69
        on right: 67 69
    indexedelem (70)
        on left: 70
        on right: 68 69
    block <expr_p> (71)
        on left: 72
        on right: 11 77
    $@3 (72)
        on left: 71
        on right: 72
    funcname <strConst> (73)
        on left: 73 74
        on right: 75
    funcprefix <st_entryVal> (74)
        on left: 75
        on right: 78
    funcargs <intConst> (75)
        on left: 76
        on right: 78
    funcbody <intConst> (76)
        on left: 77
        on right: 78
    funcdef <st_entryVal> (77)
        on left: 78
        on right: 12 44 57 58
    const <expr_p> (78)
        on left: 79 80 81 82 83 84
        on right: 45
    idlist <intConst> (79)
        on left: 85 86 87
        on right: 76 86
    ifprefix <expr_p> (80)
        on left: 88
        on right: 90 91
    elseprefix <intConst> (81)
        on left: 89
        on right: 91
    ifstmt (82)
        on left: 90 91
        on right: 5
    whilestart <intConst> (83)
        on left: 92
        on right: 94
    whilesecond <intConst> (84)
        on left: 93
        on right: 94
    whilestmt <stmt_pt> (85)
        on left: 94
        on right: 6
    forstmt (86)
        on left: 95
        on right: 7
    returnstmt <expr_p> (87)
        on left: 96 97
        on right: 8


State 0

    0 $accept: • program $end

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 1

   79 const: INTEGER •

    $default  reduce using rule 79 (const)


State 2

   80 const: REAL •

    $default  reduce using rule 80 (const)


State 3

   81 const: STRING •

    $default  reduce using rule 81 (const)


State 4

   46 lvalue: ID •

    $default  reduce using rule 46 (lvalue)


State 5

   83 const: TRUE •

    $default  reduce using rule 83 (const)


State 6

   84 const: FALSE •

    $default  reduce using rule 84 (const)


State 7

   47 lvalue: LOCAL • ID

    ID  shift, and go to state 47


State 8

   82 const: NIL •

    $default  reduce using rule 82 (const)


State 9

   37 term: MINUSMINUS • lvalue

    ID          shift, and go to state 4
    LOCAL       shift, and go to state 7
    LPAREN      shift, and go to state 48
    COLONCOLON  shift, and go to state 24

    lvalue     go to state 49
    tableitem  go to state 33
    member     go to state 34
    call       go to state 50


State 10

   88 ifprefix: IF • LPAREN expr RPAREN

    LPAREN  shift, and go to state 51


State 11

   92 whilestart: WHILE •

    $default  reduce using rule 92 (whilestart)


State 12

   75 funcprefix: FUNCTION • funcname

    ID  shift, and go to state 52

    $default  reduce using rule 74 (funcname)

    funcname  go to state 53


State 13

   95 forstmt: FOR • LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    LPAREN  shift, and go to state 54


State 14

   96 returnstmt: RETURN • SEMICOLON
   97           | RETURN • expr SEMICOLON

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 55
    COLONCOLON  shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 15

    9 stmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 16

   10 stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 58


State 17

   34 term: NOT • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 59
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 18

   33 term: MINUS • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 19

   35 term: PLUSPLUS • lvalue

    ID          shift, and go to state 4
    LOCAL       shift, and go to state 7
    LPAREN      shift, and go to state 48
    COLONCOLON  shift, and go to state 24

    lvalue     go to state 61
    tableitem  go to state 33
    member     go to state 34
    call       go to state 50


State 20

   72 block: LCBRACK • $@3 stmts RCBRACK

    $default  reduce using rule 71 ($@3)

    $@3  go to state 62


State 21

   66 objectdef: LBRACK • elist RBRACK
   67          | LBRACK • indexed RBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 63
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr         go to state 64
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    tableitem    go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 65
    objectdef    go to state 36
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 40


State 22

   32 term: LPAREN • expr RPAREN
   44 primary: LPAREN • funcdef RPAREN
   57 call: LPAREN • funcdef RPAREN LPAREN elist RPAREN
   58     | LPAREN • funcdef RPAREN LPAREN RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    FUNCTION    shift, and go to state 12
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 69
    const       go to state 40


State 23

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 24

   48 lvalue: COLONCOLON • ID

    ID  shift, and go to state 70


State 25

    0 $accept: program • $end

    $end  shift, and go to state 71


State 26

    1 program: stmts •
    2 stmts: stmts • stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 72
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 27

    3 stmts: stmt •

    $default  reduce using rule 3 (stmts)


State 28

    4 stmt: expr • SEMICOLON
   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    SEMICOLON     shift, and go to state 86


State 29

   30 expr: term •

    $default  reduce using rule 30 (expr)


State 30

   14 expr: assignexpr •

    $default  reduce using rule 14 (expr)


State 31

   39 term: primary •

    $default  reduce using rule 39 (term)


State 32

   36 term: lvalue • PLUSPLUS
   38     | lvalue • MINUSMINUS
   40 assignexpr: lvalue • ASSIGN expr
   41 primary: lvalue •
   50 tableitem: lvalue • DOT ID
   51          | lvalue • LBRACK expr RBRACK
   56 call: lvalue • callsuffix

    MINUSMINUS  shift, and go to state 87
    ASSIGN      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    LBRACK      shift, and go to state 90
    LPAREN      shift, and go to state 91
    DOT         shift, and go to state 92
    DOTDOT      shift, and go to state 93

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 33

   52 member: tableitem •

    $default  reduce using rule 52 (member)


State 34

   49 lvalue: member •

    $default  reduce using rule 49 (lvalue)


State 35

   42 primary: call •
   53 member: call • DOT ID
   54       | call • LBRACK expr RBRACK
   55 call: call • normcall

    LBRACK  shift, and go to state 97
    LPAREN  shift, and go to state 91
    DOT     shift, and go to state 98

    $default  reduce using rule 42 (primary)

    normcall  go to state 99


State 36

   43 primary: objectdef •

    $default  reduce using rule 43 (primary)


State 37

   11 stmt: block •

    $default  reduce using rule 11 (stmt)


State 38

   78 funcdef: funcprefix • funcargs funcbody

    LPAREN  shift, and go to state 100

    funcargs  go to state 101


State 39

   12 stmt: funcdef •

    $default  reduce using rule 12 (stmt)


State 40

   45 primary: const •

    $default  reduce using rule 45 (primary)


State 41

   90 ifstmt: ifprefix • stmt
   91       | ifprefix • stmt elseprefix stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmt        go to state 102
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 42

    5 stmt: ifstmt •

    $default  reduce using rule 5 (stmt)


State 43

   94 whilestmt: whilestart • whilesecond stmt

    LPAREN  shift, and go to state 103

    whilesecond  go to state 104


State 44

    6 stmt: whilestmt •

    $default  reduce using rule 6 (stmt)


State 45

    7 stmt: forstmt •

    $default  reduce using rule 7 (stmt)


State 46

    8 stmt: returnstmt •

    $default  reduce using rule 8 (stmt)


State 47

   47 lvalue: LOCAL ID •

    $default  reduce using rule 47 (lvalue)


State 48

   57 call: LPAREN • funcdef RPAREN LPAREN elist RPAREN
   58     | LPAREN • funcdef RPAREN LPAREN RPAREN

    FUNCTION  shift, and go to state 12

    funcprefix  go to state 38
    funcdef     go to state 105


State 49

   37 term: MINUSMINUS lvalue •
   50 tableitem: lvalue • DOT ID
   51          | lvalue • LBRACK expr RBRACK
   56 call: lvalue • callsuffix

    LBRACK  shift, and go to state 90
    LPAREN  shift, and go to state 91
    DOT     shift, and go to state 92
    DOTDOT  shift, and go to state 93

    $default  reduce using rule 37 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 50

   53 member: call • DOT ID
   54       | call • LBRACK expr RBRACK
   55 call: call • normcall

    LBRACK  shift, and go to state 97
    LPAREN  shift, and go to state 91
    DOT     shift, and go to state 98

    normcall  go to state 99


State 51

   88 ifprefix: IF LPAREN • expr RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 106
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 52

   73 funcname: ID •

    $default  reduce using rule 73 (funcname)


State 53

   75 funcprefix: FUNCTION funcname •

    $default  reduce using rule 75 (funcprefix)


State 54

   95 forstmt: FOR LPAREN • elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 107
    objectdef   go to state 36
    const       go to state 40


State 55

   96 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 96 (returnstmt)


State 56

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   97 returnstmt: RETURN expr • SEMICOLON

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    SEMICOLON     shift, and go to state 108


State 57

    9 stmt: BREAK SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 58

   10 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 59

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   34 term: NOT expr •

    $default  reduce using rule 34 (term)


State 60

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   33 term: MINUS expr •

    $default  reduce using rule 33 (term)


State 61

   35 term: PLUSPLUS lvalue •
   50 tableitem: lvalue • DOT ID
   51          | lvalue • LBRACK expr RBRACK
   56 call: lvalue • callsuffix

    LBRACK  shift, and go to state 90
    LPAREN  shift, and go to state 91
    DOT     shift, and go to state 92
    DOTDOT  shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 62

   72 block: LCBRACK $@3 • stmts RCBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmts       go to state 109
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 63

   70 indexedelem: LCBRACK • expr COLON expr RCBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 110
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 64

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   63 elist: expr •

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85

    $default  reduce using rule 63 (elist)


State 65

   64 elist: elist • COMMA expr
   66 objectdef: LBRACK elist • RBRACK

    RBRACK  shift, and go to state 111
    COMMA   shift, and go to state 112


State 66

   67 objectdef: LBRACK indexed • RBRACK
   69 indexed: indexed • COMMA indexedelem

    RBRACK  shift, and go to state 113
    COMMA   shift, and go to state 114


State 67

   68 indexed: indexedelem •

    $default  reduce using rule 68 (indexed)


State 68

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   32 term: LPAREN expr • RPAREN

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RPAREN        shift, and go to state 115


State 69

   44 primary: LPAREN funcdef • RPAREN
   57 call: LPAREN funcdef • RPAREN LPAREN elist RPAREN
   58     | LPAREN funcdef • RPAREN LPAREN RPAREN

    RPAREN  shift, and go to state 116


State 70

   48 lvalue: COLONCOLON ID •

    $default  reduce using rule 48 (lvalue)


State 71

    0 $accept: program $end •

    $default  accept


State 72

    2 stmts: stmts stmt •

    $default  reduce using rule 2 (stmts)


State 73

   29 expr: expr OR • $@2 M expr

    $default  reduce using rule 28 ($@2)

    $@2  go to state 117


State 74

   27 expr: expr AND • $@1 M expr

    $default  reduce using rule 26 ($@1)

    $@1  go to state 118


State 75

   15 expr: expr PLUS • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 76

   16 expr: expr MINUS • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 77

   17 expr: expr MULT • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 78

   18 expr: expr DIVIDE • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 79

   19 expr: expr PERCENT • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 80

   25 expr: expr NOTEQUAL • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 81

   20 expr: expr GREATER • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 82

   22 expr: expr LESSER • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 83

   21 expr: expr GREATEREQUAL • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 84

   23 expr: expr LESSEREQUAL • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 85

   24 expr: expr EQUAL • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 86

    4 stmt: expr SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 87

   38 term: lvalue MINUSMINUS •

    $default  reduce using rule 38 (term)


State 88

   40 assignexpr: lvalue ASSIGN • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 89

   36 term: lvalue PLUSPLUS •

    $default  reduce using rule 36 (term)


State 90

   51 tableitem: lvalue LBRACK • expr RBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 91

   61 normcall: LPAREN • elist RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 132
    objectdef   go to state 36
    const       go to state 40


State 92

   50 tableitem: lvalue DOT • ID

    ID  shift, and go to state 133


State 93

   62 methodcall: DOTDOT • ID LPAREN elist RPAREN

    ID  shift, and go to state 134


State 94

   56 call: lvalue callsuffix •

    $default  reduce using rule 56 (call)


State 95

   59 callsuffix: normcall •

    $default  reduce using rule 59 (callsuffix)


State 96

   60 callsuffix: methodcall •

    $default  reduce using rule 60 (callsuffix)


State 97

   54 member: call LBRACK • expr RBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 98

   53 member: call DOT • ID

    ID  shift, and go to state 136


State 99

   55 call: call normcall •

    $default  reduce using rule 55 (call)


State 100

   76 funcargs: LPAREN • idlist RPAREN

    ID  shift, and go to state 137

    $default  reduce using rule 87 (idlist)

    idlist  go to state 138


State 101

   78 funcdef: funcprefix funcargs • funcbody

    LCBRACK  shift, and go to state 20

    block     go to state 139
    funcbody  go to state 140


State 102

   90 ifstmt: ifprefix stmt •
   91       | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)

    elseprefix  go to state 142


State 103

   93 whilesecond: LPAREN • expr RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 143
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 104

   94 whilestmt: whilestart whilesecond • stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmt        go to state 144
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 105

   57 call: LPAREN funcdef • RPAREN LPAREN elist RPAREN
   58     | LPAREN funcdef • RPAREN LPAREN RPAREN

    RPAREN  shift, and go to state 145


State 106

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   88 ifprefix: IF LPAREN expr • RPAREN

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RPAREN        shift, and go to state 146


State 107

   64 elist: elist • COMMA expr
   95 forstmt: FOR LPAREN elist • SEMICOLON expr SEMICOLON elist RPAREN stmt

    SEMICOLON  shift, and go to state 147
    COMMA      shift, and go to state 112


State 108

   97 returnstmt: RETURN expr SEMICOLON •

    $default  reduce using rule 97 (returnstmt)


State 109

    2 stmts: stmts • stmt
   72 block: LCBRACK $@3 stmts • RCBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    RCBRACK     shift, and go to state 148
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmt        go to state 72
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 110

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   70 indexedelem: LCBRACK expr • COLON expr RCBRACK

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    COLON         shift, and go to state 149


State 111

   66 objectdef: LBRACK elist RBRACK •

    $default  reduce using rule 66 (objectdef)


State 112

   64 elist: elist COMMA • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 150
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 113

   67 objectdef: LBRACK indexed RBRACK •

    $default  reduce using rule 67 (objectdef)


State 114

   69 indexed: indexed COMMA • indexedelem

    LCBRACK  shift, and go to state 63

    indexedelem  go to state 151


State 115

   32 term: LPAREN expr RPAREN •

    $default  reduce using rule 32 (term)


State 116

   44 primary: LPAREN funcdef RPAREN •
   57 call: LPAREN funcdef RPAREN • LPAREN elist RPAREN
   58     | LPAREN funcdef RPAREN • LPAREN RPAREN

    LPAREN  shift, and go to state 152

    $default  reduce using rule 44 (primary)


State 117

   29 expr: expr OR $@2 • M expr

    $default  reduce using rule 31 (M)

    M  go to state 153


State 118

   27 expr: expr AND $@1 • M expr

    $default  reduce using rule 31 (M)

    M  go to state 154


State 119

   15 expr: expr • PLUS expr
   15     | expr PLUS expr •
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    $default  reduce using rule 15 (expr)


State 120

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   16     | expr MINUS expr •
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    $default  reduce using rule 16 (expr)


State 121

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   17     | expr MULT expr •
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    $default  reduce using rule 17 (expr)


State 122

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   18     | expr DIVIDE expr •
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    $default  reduce using rule 18 (expr)


State 123

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   19     | expr PERCENT expr •
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    $default  reduce using rule 19 (expr)


State 124

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   25     | expr NOTEQUAL expr •
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84

    NOTEQUAL  error (nonassociative)
    EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 125

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   20     | expr GREATER expr •
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    GREATER       error (nonassociative)
    LESSER        error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEREQUAL   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 126

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   22     | expr LESSER expr •
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    GREATER       error (nonassociative)
    LESSER        error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEREQUAL   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   21     | expr GREATEREQUAL expr •
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    GREATER       error (nonassociative)
    LESSER        error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEREQUAL   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 128

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   23     | expr LESSEREQUAL expr •
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    MULT     shift, and go to state 77
    DIVIDE   shift, and go to state 78
    PERCENT  shift, and go to state 79

    GREATER       error (nonassociative)
    LESSER        error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEREQUAL   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 129

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   24     | expr EQUAL expr •
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr

    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84

    NOTEQUAL  error (nonassociative)
    EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 130

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   40 assignexpr: lvalue ASSIGN expr •

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85

    $default  reduce using rule 40 (assignexpr)


State 131

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   51 tableitem: lvalue LBRACK expr • RBRACK

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RBRACK        shift, and go to state 155


State 132

   61 normcall: LPAREN elist • RPAREN
   64 elist: elist • COMMA expr

    RPAREN  shift, and go to state 156
    COMMA   shift, and go to state 112


State 133

   50 tableitem: lvalue DOT ID •

    $default  reduce using rule 50 (tableitem)


State 134

   62 methodcall: DOTDOT ID • LPAREN elist RPAREN

    LPAREN  shift, and go to state 157


State 135

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   54 member: call LBRACK expr • RBRACK

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RBRACK        shift, and go to state 158


State 136

   53 member: call DOT ID •

    $default  reduce using rule 53 (member)


State 137

   85 idlist: ID •

    $default  reduce using rule 85 (idlist)


State 138

   76 funcargs: LPAREN idlist • RPAREN
   86 idlist: idlist • COMMA ID

    RPAREN  shift, and go to state 159
    COMMA   shift, and go to state 160


State 139

   77 funcbody: block •

    $default  reduce using rule 77 (funcbody)


State 140

   78 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 78 (funcdef)


State 141

   89 elseprefix: ELSE •

    $default  reduce using rule 89 (elseprefix)


State 142

   91 ifstmt: ifprefix stmt elseprefix • stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmt        go to state 161
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 143

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   93 whilesecond: LPAREN expr • RPAREN

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RPAREN        shift, and go to state 162


State 144

   94 whilestmt: whilestart whilesecond stmt •

    $default  reduce using rule 94 (whilestmt)


State 145

   57 call: LPAREN funcdef RPAREN • LPAREN elist RPAREN
   58     | LPAREN funcdef RPAREN • LPAREN RPAREN

    LPAREN  shift, and go to state 152


State 146

   88 ifprefix: IF LPAREN expr RPAREN •

    $default  reduce using rule 88 (ifprefix)


State 147

   95 forstmt: FOR LPAREN elist SEMICOLON • expr SEMICOLON elist RPAREN stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 163
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 148

   72 block: LCBRACK $@3 stmts RCBRACK •

    $default  reduce using rule 72 (block)


State 149

   70 indexedelem: LCBRACK expr COLON • expr RCBRACK

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 164
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 150

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   64 elist: elist COMMA expr •

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85

    $default  reduce using rule 64 (elist)


State 151

   69 indexed: indexed COMMA indexedelem •

    $default  reduce using rule 69 (indexed)


State 152

   57 call: LPAREN funcdef RPAREN LPAREN • elist RPAREN
   58     | LPAREN funcdef RPAREN LPAREN • RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    RPAREN      shift, and go to state 165
    COLONCOLON  shift, and go to state 24

    RPAREN    [reduce using rule 65 (elist)]
    $default  reduce using rule 65 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 166
    objectdef   go to state 36
    const       go to state 40


State 153

   29 expr: expr OR $@2 M • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 167
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 154

   27 expr: expr AND $@1 M • expr

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    expr        go to state 168
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 155

   51 tableitem: lvalue LBRACK expr RBRACK •

    $default  reduce using rule 51 (tableitem)


State 156

   61 normcall: LPAREN elist RPAREN •

    $default  reduce using rule 61 (normcall)


State 157

   62 methodcall: DOTDOT ID LPAREN • elist RPAREN

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 169
    objectdef   go to state 36
    const       go to state 40


State 158

   54 member: call LBRACK expr RBRACK •

    $default  reduce using rule 54 (member)


State 159

   76 funcargs: LPAREN idlist RPAREN •

    $default  reduce using rule 76 (funcargs)


State 160

   86 idlist: idlist COMMA • ID

    ID  shift, and go to state 170


State 161

   91 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 91 (ifstmt)


State 162

   93 whilesecond: LPAREN expr RPAREN •

    $default  reduce using rule 93 (whilesecond)


State 163

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   95 forstmt: FOR LPAREN elist SEMICOLON expr • SEMICOLON elist RPAREN stmt

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    SEMICOLON     shift, and go to state 171


State 164

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   70 indexedelem: LCBRACK expr COLON expr • RCBRACK

    OR            shift, and go to state 73
    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85
    RCBRACK       shift, and go to state 172


State 165

   58 call: LPAREN funcdef RPAREN LPAREN RPAREN •

    $default  reduce using rule 58 (call)


State 166

   57 call: LPAREN funcdef RPAREN LPAREN elist • RPAREN
   64 elist: elist • COMMA expr

    RPAREN  shift, and go to state 173
    COMMA   shift, and go to state 112


State 167

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   29     | expr • OR $@2 M expr
   29     | expr OR $@2 M expr •

    AND           shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 168

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULT expr
   18     | expr • DIVIDE expr
   19     | expr • PERCENT expr
   20     | expr • GREATER expr
   21     | expr • GREATEREQUAL expr
   22     | expr • LESSER expr
   23     | expr • LESSEREQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOTEQUAL expr
   27     | expr • AND $@1 M expr
   27     | expr AND $@1 M expr •
   29     | expr • OR $@2 M expr

    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIVIDE        shift, and go to state 78
    PERCENT       shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    GREATER       shift, and go to state 81
    LESSER        shift, and go to state 82
    GREATEREQUAL  shift, and go to state 83
    LESSEREQUAL   shift, and go to state 84
    EQUAL         shift, and go to state 85

    $default  reduce using rule 27 (expr)


State 169

   62 methodcall: DOTDOT ID LPAREN elist • RPAREN
   64 elist: elist • COMMA expr

    RPAREN  shift, and go to state 174
    COMMA   shift, and go to state 112


State 170

   86 idlist: idlist COMMA ID •

    $default  reduce using rule 86 (idlist)


State 171

   95 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON • elist RPAREN stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    COLONCOLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 175
    objectdef   go to state 36
    const       go to state 40


State 172

   70 indexedelem: LCBRACK expr COLON expr RCBRACK •

    $default  reduce using rule 70 (indexedelem)


State 173

   57 call: LPAREN funcdef RPAREN LPAREN elist RPAREN •

    $default  reduce using rule 57 (call)


State 174

   62 methodcall: DOTDOT ID LPAREN elist RPAREN •

    $default  reduce using rule 62 (methodcall)


State 175

   64 elist: elist • COMMA expr
   95 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist • RPAREN stmt

    RPAREN  shift, and go to state 176
    COMMA   shift, and go to state 112


State 176

   95 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN • stmt

    INTEGER     shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    ID          shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    LOCAL       shift, and go to state 7
    NIL         shift, and go to state 8
    MINUSMINUS  shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FUNCTION    shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    BREAK       shift, and go to state 15
    CONTINUE    shift, and go to state 16
    NOT         shift, and go to state 17
    MINUS       shift, and go to state 18
    PLUSPLUS    shift, and go to state 19
    LCBRACK     shift, and go to state 20
    LBRACK      shift, and go to state 21
    LPAREN      shift, and go to state 22
    SEMICOLON   shift, and go to state 23
    COLONCOLON  shift, and go to state 24

    stmt        go to state 177
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46


State 177

   95 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt •

    $default  reduce using rule 95 (forstmt)
